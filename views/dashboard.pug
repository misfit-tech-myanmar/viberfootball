extends layouts/app.layout.pug

block content 
  .chart-container 
        .telecom 
            div
                canvas(id="telecom" width="400" height="100")
        .country 
          div
              canvas(id="country")
  .favorite-team-container
      .favorite-team 
          div
              canvas(id="favorite-team" width="100%")
  .leaderboard-container
      .leaderboard 
          h1 Top Five Leaderboards
          table
            thead
              tr
                th Name
                th Phone
                th Score
            tbody
              each rank in leaderboards 
                tr
                  td= rank.name
                  td= rank.phone
                  td= rank.scores
block scripts 
  script. 
      const telecomCTX = document.getElementById('telecom');
      const favoriteTeamCTX = document.getElementById('favorite-team');
      const countryCTX = document.getElementById('country');

      async function displayChart(){
        try{
          const response = await fetch('http://localhost:5000/admin/user-data')
          const data = await response.json();
          updateTelecomChart(telecomCTX, data.telecom)
          updateFavTeamChart(favoriteTeamCTX, data.favTeam)
          updateCountryChart(countryCTX, data.country)
        }catch(err){
          console.log(err)
        }
        
      }

      function updateTelecomChart(ctx, data){
        console.log(data)
        new Chart(ctx, {
          type: "pie",
          data: {
              labels: ['OOREDOO', 'MPT', 'ATOM', 'MYTEL', "OTHERS"],
              datasets: [{
                  label: 'Telecom',
                  data: [data.OOREDOO, data.MPT, data.ATOM, data.MYTEL, data.OTHER],
                  backgroundColor: [
                      'rgba(228, 11, 38, 0.8)',
                      'rgba(250, 250, 33, 0.8)',
                      'rgba(39, 163, 245, 0.8)',
                      'rgba(246, 175, 34, 0.8)',
                      'rgba(54, 162, 235, 0.2)',
                  ],
                  hoverOffset: 4
              }]
          },
      });
      }

      function updateFavTeamChart(ctx, data){
        console.log(data)
          new Chart(ctx, {
            type: "bar",
            data: {
                labels: Object.keys(data),
                datasets: [{
                    label: 'Favorite Team',
                    data: Object.values(data),
                    backgroundColor: [
                        //- 'rgba(250, 250, 33, 0.8)',
                        //- 'rgba(39, 163, 245, 0.8)',
                        //- 'rgba(228, 11, 38, 0.8)',
                        //- 'rgba(246, 175, 34, 0.8)',
                        'rgba(54, 162, 235, 0.2)',
                    ],
                    borderColor: [
                        //- 'rgb(255, 99, 132)',
                        //- 'rgb(255, 159, 64)',
                        //- 'rgb(255, 205, 86)',
                        //- 'rgb(75, 192, 192)',
                        'rgb(54, 162, 235)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                y: {
                    beginAtZero: true
                }
                }
            },
        });
      }

      function updateCountryChart(ctx, data){
        let entries = Object.entries(data);
        entries.sort((a, b) => b[1] - a[1]);
        if(entries.length > 10){
          const firstTenEntries = entries.slice(0, 10);
          // Get the removed entries and sum their values
          const removedEntries = entries.slice(10);
          sumOfRemovedValues = removedEntries.reduce((sum, entry) => sum + entry[1], 0);
          // Add the sum of the removed entries to the first 10 entries with a new key
          firstTenEntries.push(['Other Country', sumOfRemovedValues]);
          // Set entries to the modified first 10 entries array
          entries = firstTenEntries;
        }
        const sortedObject = Object.fromEntries(entries);
        console.log(sortedObject)
        new Chart(ctx, {
          type: "bar",
          data: {
              labels: Object.keys(sortedObject),
              datasets: [{
                  label: 'Country',
                  data: Object.values(sortedObject),
                  backgroundColor: [
                      'rgba(39, 163, 245, 0.8)',
                      //- 'rgba(228, 11, 38, 0.8)',
                      //- 'rgba(250, 250, 33, 0.8)',
                      //- 'rgba(246, 175, 34, 0.8)',
                      //- 'rgba(54, 162, 235, 0.2)',
                  ],
                  borderColor: [
                      //- 'rgb(255, 99, 132)',
                      //- 'rgb(255, 159, 64)',
                      //- 'rgb(255, 205, 86)',
                      //- 'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)'
                  ],
                  borderWidth: 1
              }]
          },
          options: {
              categoryPercentage: 1,
              scales: {
              y: {
                  beginAtZero: true
              }
              }
          },
      });
      }

      displayChart()